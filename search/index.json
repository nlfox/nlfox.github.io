[{"content":"There is one problem where the VM that\u0026rsquo;s sharing storage via NFS start up take time, another VM which takes dependency on the storage shared won\u0026rsquo;t be able to mount properly using /etc/fstab.\nUnfortunately FSTAB don\u0026rsquo;t have the flexibility to configure delay, so we need a script during start up.\nMount script 1 2 3 4 5 6 7 8 9 10 11 12 #!/bin/bash TARGET_IP=\u0026#34;10.10.10.2\u0026#34; MOUNT_POINT=\u0026#34;/tank\u0026#34; NFS_SHARE=\u0026#34;10.10.10.2:/tank\u0026#34; until ping -c 1 -W 1 \u0026#34;$TARGET_IP\u0026#34; \u0026gt; /dev/null 2\u0026gt;\u0026amp;1; do echo \u0026#34;Waiting for target IP $TARGET_IP...\u0026#34; sleep 5 done mount -t nfs \u0026#34;$NFS_SHARE\u0026#34; \u0026#34;$MOUNT_POINT\u0026#34; Add to Systemd Create a file in /etc/systemd/system/mount-tank.service\n1 2 3 4 5 6 7 8 9 10 11 12 [Unit] Description=Mount CIFS Share after Target IP is Available After=network-online.target Wants=network-online.target [Service] Type=oneshot ExecStart=/root/mount-tank.sh RemainAfterExit=true [Install] WantedBy=multi-user.target Delay docker start up Edit docker service: systemctl edit docker.service.\nYou can use a fix time delay like\n1 2 [Service] ExecStartPre=/bin/sleep 120 Or use a RequiresMountsFor option.\n1 2 [Unit] RequiresMountsFor=/tank/appdata/ ","date":"2024-11-01T00:00:00Z","permalink":"https://blog.nlfox.net/p/delay-mount-until-host-is-available/","title":"Delay mount until host is available"},{"content":"Why Arm \u0026amp; Why RK3588 It\u0026rsquo;s efficient at a unbeatable level compared to x64, with all the things I need. Idle at 5w, it can save me a cup of coffee per month. Why not?\nDownload system image I use Armbian https://www.armbian.com/orange-pi-5-plus/\nAs recommanded, I use Etcher to flash image to TF card, you should be able to boot from TF card.\nBoot from M2 SSD Use Etcher again to write to SSD, this way you will have a OS to boot from once remove TF card.\nExecute armbian-install, and choose Install/Update the bootloader on MTD Flash\nOnce finished, you can power off and remove TF card.\nInstall Proxmox VE base on armbian Armbian is based on Debian Bookworm, so is a good base for Proxmox VE. Below guide contains everything needed for it to work.\nhttps://github.com/jiangcuo/Proxmox-Port/wiki/Install-Proxmox-VE-on-Debian-bookworm\nStart your first Arm64 VM on RK3588 Below is my config for my primary Ubuntu Server just for reference.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \u0026gt; # cat /etc/pve/nodes/orangepi5-plus/qemu-server/100.conf affinity: 4-7 bios: ovmf boot: order=scsi0;scsi2;net0 cores: 4 cpu: max efidisk0: local:100/vm-100-disk-0.qcow2,efitype=4m,pre-enrolled-keys=1,size=64M memory: 16384 net0: virtio=BC:24:11:20:D3:D2,bridge=vmbr0,firewall=1 net1: virtio=BC:24:11:95:6C:7A,bridge=vmbr1,firewall=1 numa: 0 onboot: 1 ostype: l26 scsi0: local:100/vm-100-disk-1.qcow2,iothread=1,size=32G scsi1: local:100/vm-100-disk-2.qcow2,iothread=1,size=1T scsi2: local:iso/ubuntu-24.04.1-live-server-arm64.iso,media=cdrom,size=2436748K scsihw: virtio-scsi-single sockets: 1 vga: ramfb Arm KVM support is super limited, so the config is almost fixed.\nCPU has to be max, BIOS has to be OVMF, vga has to be ramfb, SCSI and network driver has to be VirtIO.\nCPU affinity must be set. KVM won\u0026rsquo;t run if you mix A76 and A55 cores, so max CPU cores you can use for VM is 4.\nBig core: 4-7, Small core: 0-3. In this VM I use all Big cores.\nSide note: I do recommand general arm64 images instead of RK3588 specific for VM use, better compatibility, less compiling.\nPass-through Devices Short answer is, right now there is no great way to pass through devices in KVM given the limited IOMMU support.\nSo the only way to pass-through GPU \u0026amp; NPU use mount bind in LXC container.\nBind mount inside LXC container 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 arch: arm64 features: nesting=1 hostname: CT101 memory: 16384 nameserver: 192.168.50.1 net0: name=eth0,bridge=vmbr0,firewall=1,gw=192.168.50.1,hwaddr=BC:24:11:84:B6:82,ip=192.168.50.140/24,type=veth net1: name=eth1,bridge=vmbr1,firewall=1,hwaddr=BC:24:11:5B:7E:AD,ip=10.10.10.3/24,type=veth onboot: 0 ostype: ubuntu rootfs: local:101/vm-101-disk-0.raw,size=32G startup: order=2 swap: 4096 lxc.mount.entry: /dev/mali0 dev/mali0 none bind,optional,create=file lxc.mount.entry: /dev/dri dev/dri none bind,optional,create=dir lxc.mount.entry: /dev/dma_heap dev/dma_heap none bind,optional,create=dir lxc.mount.entry: /dev/rga dev/rga none bind,optional,create=file lxc.mount.entry: /dev/mpp_service dev/mpp_service none bind,optional,create=file Above is sample config that I used for bind mount to pass through a GPU \u0026amp; corresponding drivers.\nTBD: PCIE passthrough for RK3588 There is a actually a guide to enable PCIE passthrough,\nhttps://dl.radxa.com/users/dev/Rockchip_PCIe_Virtualization_Developer_Guide_CN.pdf\nI don\u0026rsquo;t need it that much, if I need it someday will try to make it work.\n","date":"2024-10-29T00:00:00Z","permalink":"https://blog.nlfox.net/p/rk3588-pve-8.2-setup-notes/","title":"RK3588 PVE 8.2 Setup Notes"},{"content":"Recently I changed my NAS hardware, I found that as per my need, I don\u0026rsquo;t actully need the orginal RAID-Z1 for the extra storage, instead I want my data to as secure as possible with mirror vdev (basically RAID1 in ZFS term).\nI re-ordered my storage architect to 3 layers.\nFirst layer is a SSD RAID1 zpool that runs Proxmox (HostOS) along with frequently accessed application data (like SQLite, VMDisk etc).\nSecond layer is HDD RAID1 zpool, holds all rest data that\u0026rsquo;s not frequently accessed.\nThird layer is a portable HDD serve as a cold backup for snapshots from both 1st and 2nd layer.\nAdd vdev to mirror existing storage with proxmox boot So if a disk is used for proxmox root mountpoint, it will be partitioned into 3: BIOS, EFI, and actual data.\nSo to add a SSD to existing proxmox pool, there are some extra work need to be done to copy the first 2 partition.\nRef: https://pve.proxmox.com/wiki/ZFS_on_Linux\nThe first steps of copying the partition table, reissuing GUIDs and replacing the ZFS partition are the same.\n1 2 sgdisk \u0026lt;healthy bootable device\u0026gt; -R \u0026lt;new device\u0026gt; sgdisk -G \u0026lt;new device\u0026gt; Find the right disk:\n1 ls -l /dev/disk/by-id | grep -v part Then for the new partition 3, attach it to existing ZFS pool as mirroring vdev:\n1 zpool attach rpool nvme-eui.\u0026lt;existing\u0026gt;-part3 nvme-eui.\u0026lt;new\u0026gt;-part3 Note that the order is important! Existing one should be the first argument, otherwise it might fail.\nWe only want to mirror partition 3 given it\u0026rsquo;s the root filesystem.\nThen use proxmox-boot-tool to initialize grub on it.\n1 2 proxmox-boot-tool format /dev/nvme1n1p2 proxmox-boot-tool init /dev/nvme1n1p2 grub ","date":"2024-10-27T00:00:00Z","image":"https://wiki.alopex.li/vdev.png","permalink":"https://blog.nlfox.net/p/zfs-mirror-vdev-for-existing-storage/","title":"ZFS Mirror vdev for existing storage"},{"content":"Create ZFS on backup external disk Find the drive from /dev/disk/by-id/\n1 2 3 4 \u0026gt; ls /dev/disk/by-id/ ... usb-Seagate_Expansion_HDD_00000000XXXXX-0:0 ... Create Backup zpool\n1 zpool create seagate_backup_pool /dev/disk/by-id/usb-Seagate_Expansion_HDD_00000000XXXXX-0:0 Import Zpool in external drive Command zpool import without any argument will show what\u0026rsquo;s available for import in current system.\nAfter that, do zpool import seagate_backup_pool -f to actually import the backup pool.\nTake Snapshot of current system Check current snapshot\n1 zfs list -t snapshot Take snapshot for all dataset.\n1 zfs snapshot -r tank@current Send snapshot to backup pool Backup as Dataset\n1 zfs send -R tank@current | zfs recv seagate_backup_pool/pve-init-10-24-2024 Increment\n1 zfs send -i -R tank@current | zfs recv seagate_backup_pool/pve-init-10-24-2024 Backup as single file\n1 zfs send -R tank@current \u0026gt; tank.bak Make USB external drive Sleep Install hd-idle and execute:\nTo instantly test out:\n1 hd-idle -t sdd hdparm won\u0026rsquo;t work for usb external drive.\nTo check drive status:\n1 2 hdparm -C /dev/sd[abc] smartctl -i -n standby /dev/sda To reguarly run hd-idle, use it\u0026rsquo;s own service.\nvim /etc/default/hd-idle\nBelow opts will make hd-idle sleep device after 600s if no activity.\n1 HD_IDLE_OPTS=\u0026#34;-i 600 -l /var/log/hd-idle.log\u0026#34; ","date":"2024-10-26T00:00:00Z","image":"https://lowtek.ca/roo/wp-content/uploads/2024/04/openzfslogo.png","permalink":"https://blog.nlfox.net/p/note-for-zfs-snapshot-and-backup/","title":"Note for ZFS Snapshot and Backup"},{"content":"Enable KVM on virtual machine Switch virtual server CPU type to match host. Somehow this option not exist on UI\n1 qm set 105 --cpu host Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 services: dsm: container_name: dsm image: vdsm/virtual-dsm environment: DISK_FMT: \u0026#34;qcow2\u0026#34; # Root disk will be a single file in qcow2, recommanded RAM_SIZE: \u0026#34;2G\u0026#34; CPU_CORES: \u0026#34;2\u0026#34; devices: - /dev/kvm cap_add: - NET_ADMIN volumes: - /tank/appdata/vdsm/data:/storage # need a local storage for its data stop_grace_period: 2m ports: - 127.0.0.1:5022:22 # Local port open for SSH access - 5000:5000 Make Synology able to index and access remote FS. 1 2 3 4 sudo -i wget http://code.imnks.com/face/PatchELFSharp chmod +x PatchELFSharp ./PatchELFSharp \u0026#34;/usr/lib/libsynosdk.so.7\u0026#34; \u0026#34;SYNOFSIsRemoteFS\u0026#34; \u0026#34;B8 00 00 00 00 C3\u0026#34; We use host network so need to specify ssh 127.0.0.1 -p 5022.\nRef https://wilsonzeng.com/article/c50e99ee-ab33-4da0-9c64-6cb4d0462f94\n","date":"2024-10-25T00:00:00Z","permalink":"https://blog.nlfox.net/p/synology-virtual-dsm/","title":"Synology Virtual DSM"},{"content":"Download I downloaded 8.2 from https://www.proxmox.com/en/downloads\nBootable Device I used Ventoy https://ventoy.net/en/index.html. The experience was great.\nIt\u0026rsquo;s based on Grub2. Grub2 have support for ISO long ago, finally someone wrote some good wrapper.\nInstead of dd, it can have multiple image and boot from any of it. But this actually caused me some issue, so for Proxmox try NOT to use Ventoy!\nInstall ISO stuck Waiting for /dev Using Ventoy, I boot into Proxmox VE ISO. But it stuck immediately\n1 \u0026#34;Waiting for /dev to be fully populated...\u0026#34; It\u0026rsquo;s due to the graphic driver.\nPress \u0026rsquo;e\u0026rsquo; on the selection screen, GRUB will let you edit the start up parameters.\nRemoving after the ro,quiet parameter, add nomodeset. Press \u0026lsquo;Ctrl + X\u0026rsquo; to boot selected entry. After that finally saw the install prompt.\nNew install using ZFS as root won\u0026rsquo;t start up Another issue I encounter is after finished the install and rebooted, Proxmox stuck when loading the whole system. The message spamming whole screen didn\u0026rsquo;t help, there is no error message at all.\nThis could due to proxmox don\u0026rsquo;t use classic GRUB2 as boot manager. The only way to force it install Grub2 is disable fast boot, enable legacy boot options and disable UEFI boot.\nAfter re-install with above option, it should be able to boot properly.\nRemove subscription pop-up Quick one-liner\n1 sed -Ezi.bak \u0026#34;s/(Ext.Msg.show\\(\\{\\s+title: gettext\\(\u0026#39;No valid sub)/void\\(\\{ \\/\\/\\1/g\u0026#34; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js \u0026amp;\u0026amp; systemctl restart pveproxy.service Remove paid Repo Move /etc/apt/sources.list.d/pve-enterprise.list away.\n1 mv /etc/apt/sources.list.d/pve-enterprise.list /etc/apt/sources.list.d/pve-enterprise.list.bak For /etc/apt/sources.list.d/ceph.list, my content:\n1 deb http://download.proxmox.com/debian/ceph-quincy bookworm main My /etc/apt/sources.list\n1 2 3 4 5 6 7 8 9 10 deb http://ftp.us.debian.org/debian bookworm main contrib deb http://ftp.us.debian.org/debian bookworm-updates main contrib # security updates deb http://security.debian.org bookworm-security main contrib deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription deb http://deb.debian.org/debian bookworm-backports main contrib non-free deb-src http://deb.debian.org/debian bookworm-backports main contrib non-free ","date":"2024-10-24T00:00:00Z","permalink":"https://blog.nlfox.net/p/pve-8.2-setup-notes/","title":"PVE 8.2 Setup Notes"},{"content":"我对翻回墙内的需求很少，但是最近有些奇怪的app有地区锁，于是就顺便把在国内翻墙的东西给反向拿出来了，记录一下，for my own record。\nHow and Why 首先，基本的想法是，我们需要两级的分流，第一级是DNS。现代的网站通过DNS来进行分流以及负载均衡的情况非常普遍。如果只靠IP地理位置来走代理，很容易出现的情况就是，由于DNS查询的地区和实际访问的地区不同，你并不会被DNS分配到想要的endpoint。例如，某个qq.com的子域名，如果用美国IP访问，会返回香港的CDN地址，绕过了IP地址代理规则，导致绕过地域锁失败。\nWhere to find rule data 当然我们指望自己写规则不现实，所以需要一些第三方维护的规则文件。我选用的是下面这个源：\nhttps://github.com/Loyalsoldier/v2ray-rules-dat\nSolutions 现在有很多种成熟的一体化解决方案，我自己用的是Clash。\nClash 配置 Clash会接管DNS，所以可以做到DNS分流。并且由于Clash也自带了以上的数据库，所以配置起来比较简单。\n1 2 3 4 5 6 7 8 9 10 11 12 dns: enable: true listen: 0.0.0.0:53 nameserver: - tls://8.8.4.4 # GoogleDNS - tls://208.67.222.222 # OpenDNS nameserver-policy: geosite:cn: - 114.114.114.114 rules: - GEOSITE,cn,Proxy - GEOIP,cn,Proxy GEOSITE负责的是中国大陆的域名。 DNS的部分的大意就是默认走GoogleDNS or OpenDNS，如果DNS请求符合GEOSITE:CN，就使用114的DNS来解析。而114DNS由于是中国大陆的IP，会走中国大陆的代理来访问，保证获得正确的结果。\n当然凡事都会有例外，比如我遇到的是某个屎黄色论坛把我代理IP给ban了，于是我就在rules顶端加了一行规则让屎黄色论坛走直连。\n1 - DOMAIN-SUFFIX,178.com,DIRECT ","date":"2024-10-20T00:00:00Z","permalink":"https://blog.nlfox.net/p/%E8%87%AA%E5%8A%A8%E5%9C%B0%E5%9F%9F%E5%88%86%E6%B5%81%E4%BB%A3%E7%90%86/","title":"自动地域分流代理"},{"content":"Common issue \u0026amp; solution Install Proton-GE Proton GE is community maintained Proton, provide better compatibility than original proton.\nhttps://www.rockpapershotgun.com/how-to-install-proton-ge-on-the-steam-deck\nNote: ProtonGE \u0026gt;= 9.10 fixed a lot of video related issue, upgrade and enjoy!\nDefine Locale for a Game First you need to add required locale to SteamOS. You can use this script: https://gist.github.com/XargonWan/cc660daf92c224b7241cbf5a2bf12c47\nIt\u0026rsquo;s a bit old so I recommend run the command line by line instead of all at once. This way in case of issue you won\u0026rsquo;t mess things up. After this you can put LANG=ja_JP.UTF-8 %command% to launch configurations.\nPotential other regions beside ja_JP:\n1 2 zh_CN.UTF-8 zh_TW.UTF-8 Game crash on Fullscreen mode Due to some ancient DX API, some game may refuse to run in fullscreen mode.\nStart the game in desktop mode first, if it\u0026rsquo;s possible, set it to window or broaderless window mode.\nIf the game is too old and don\u0026rsquo;t have a window mode, one useful tool is DxWnd\nhttps://kingdoms.catsboard.com/t1522-how-to-use-dxwnd\nFont missing or weird The font is limited with built-in Proton font library.\nIf you notice the font doesn\u0026rsquo;t looks correct in the game, try to add required font to the folder\n1 /home/deck/.local/share/Steam/steamapps/compatdata/GAME_ID_HERE/pfx/drive_c/windows/Fonts Or if you are not sure what font was missing, just copy over the whole font folder (C:\\Windows\\Fonts) from windows computer.\nDual boot windows on SteamDeck Some game simply can\u0026rsquo;t be run in Linux due to anti-cheat. So still worth to install a windows on steamdeck sometimes.\nThis guide explains most of it: https://www.makeuseof.com/how-to-dual-boot-steam-deck-windows/\nDual boot manager Clover Boot Manager works great.\nSteamdeck windows drivers Refer to this official page for drivers: https://help.steampowered.com/en/faqs/view/6121-ECCD-D643-BAA8\nSteamdeck sidebar on Windows For steamdeck like sidebar experience, I recommand https://github.com/Valkirie/HandheldCompanion.\nSteamInput for Desktop mode I personally do not recommand it\u0026rsquo;s desktop mode control tho, instead I recommand the one built-in steam: Steam on windows can define desktop layout, you can check the option below:\n1 Steam -\u0026gt; Settings -\u0026gt; Controller -\u0026gt; Desktop Configuration to set it up. It will provide more flexibility.\nShare your SteamLibrary with Linux Given VNs are not performance sensitive, we can put them in TF card so that we can share between Linux and Windows.\nNTFS https://github.com/scawp/Steam-Deck.Mount-External-Drive\nAbove script should help auto mount shared drive between Windows and SteamOS.\nAfther that, if you move your game library to TF card, then it can be read from both Windows and SteamOS seamlessly.\nBTRFS Since windows have a good BTRFS driver now, BTRFS might be another good option. It will have better performance compared to NTFS/exFAT.\nDriver: https://github.com/maharmstone/btrfs\nIn steamOS, you can use same script as NTFS to auto load BTRFS https://github.com/scawp/Steam-Deck.Mount-External-Drive\nHow to Debug Sometimes common fix won\u0026rsquo;t help with the issue you are facing, below is some useful resource/mechanism to do specific game debugging.\nWhere to look for info online Usually, you are not along. Try search the issue on internet. There are multiple keywords can help you find the right resources:\n1 2 \u0026lt;your issue\u0026gt; + Proton \u0026lt;your issue\u0026gt; + Wine Since proton base on wine, you can find wine related solution helps as well.\nprotontricks is the equivalent to winetricks.\nUseful websites:\nhttps://www.protondb.com/ (Steam games)\nhttps://appdb.winehq.org/ (non-Steam games)\nhttps://wiki.archlinux.org/ (SteamOS based on Archlinux)\nEnable debug log Add PROTON_LOG=1 to your game launch options in Steam will generate debug log in home location (/home/deck).\nSearch for useful log and search on internet.\n","date":"2024-10-12T00:00:00Z","image":"https://cdn.cloudflare.steamstatic.com/steamdeck/images/video/overview_oled.jpg","permalink":"https://blog.nlfox.net/p/steamos-visualnovel-guide/","title":"SteamOS VisualNovel Guide"},{"content":"在设置完软路由（旁路由）之后，需要修改DHCP选项让软路由来做主要的路由。 但是大部分时候并不想让所有设备都走代理，一个一个设置静态ip太麻烦，而且有些设备并不能设置静态ip。\n每个设备加入网络的时候会发一个DHCP广播(DISCOVER) 来请求ip。所以从原理上来讲，dhcp server肯定能通过不同的mac地址来分配DHCP地址。\n以OpenWrt来举例，有几种办法来分配DHCP地址\nUCI 设置 1 2 3 4 5 6 uci set dhcp.mac1=\u0026#34;mac\u0026#34; uci set dhcp.mac1.mac=\u0026#34;2A:AA:13:2C:D8:59\u0026#34; uci set dhcp.mac1.networkid=\u0026#34;vpn\u0026#34; uci add_list dhcp.mac1.dhcp_option=\u0026#34;3,192.168.50.10\u0026#34; uci add_list dhcp.mac1.dhcp_option=\u0026#34;6,192.168.50.10\u0026#34; uci commit dhcp 请参考：https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol#Options\ndhcp_option=\u0026quot;3,192.168.50.10\u0026quot;这个是网关 dhcp_option=\u0026quot;6,192.168.50.10\u0026quot;这个是DNS\n其实这些都被uci写进了 /etc/config/dhcp，之后需要修改就可以直接改文件。\nDNSMASQ 设置 其实没什么区别，反正提供DHCP的是DNSMASQ。\ndnsmasq的配置文件是/etc/dnsmasq.conf。可以直接改。\n1 2 3 dhcp-host=2A:AA:13:2C:D8:59,set:OTHER dhcp-option=tag:OTHER,3,192.168.50.10 dhcp-option=tag:OTHER,6,192.168.50.10 ","date":"2024-10-11T00:00:00Z","permalink":"https://blog.nlfox.net/p/dhcp%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AE%BE%E5%A4%87%E7%BD%91%E5%85%B3%E5%92%8Cdns/","title":"DHCP自定义设备网关和DNS"},{"content":"先下载openwrt，下载官方rootfs就行\n1 2 3 https://downloads.openwrt.org/releases/23.05.2/targets/x86/64/ wget https://downloads.openwrt.org/releases/23.05.2/targets/x86/64/openwrt-23.05.2-x86-64-rootfs.tar.gz 上传到PVE, 创建模板：\n1 pct create 101 local:vztmpl/openwrt-23.05.2-x86-64-rootfs.tar.gz --rootfs local-lvm:1 --ostype unmanaged --hostname OP --arch amd64 --cores 1 --memory 1024 --swap 0 -net0 bridge=vmbr0,name=eth0 编辑模板，加入最下面几行\n1 2 3 4 5 features: nesting=1 lxc.include: /usr/share/lxc/config/openwrt.common.conf lxc.cgroup2.devices.allow: c 108:0 rwm lxc.mount.entry: /dev/ppp dev/ppp none bind,create=file lxc.cap.drop: 注意 features: nesting=1， 没有nesting会导致dnsmasq启动失败\n最终看起来\n1 2 3 4 5 6 7 8 9 10 11 12 13 arch: amd64 cores: 1 features: nesting=1 hostname: OP memory: 1024 net0: name=eth0,bridge=vmbr0,hwaddr=BC:24:11:3B:3D:8D,type=veth ostype: unmanaged rootfs: local-lvm:vm-101-disk-0,size=1G swap: 0 lxc.include: /usr/share/lxc/config/openwrt.common.conf lxc.cgroup2.devices.allow: c 108:0 rwm lxc.mount.entry: /dev/ppp dev/ppp none bind,create=file lxc.cap.drop: 之后启动，首先肯定连不上LuCI，因为网络设定以及防火墙设定，先修改 /etc/config/network\nvim /etc/config/network\n看起来像这样\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 config interface \u0026#39;loopback\u0026#39; option device \u0026#39;lo\u0026#39; option proto \u0026#39;static\u0026#39; option ipaddr \u0026#39;127.0.0.1\u0026#39; option netmask \u0026#39;255.0.0.0\u0026#39; config globals \u0026#39;globals\u0026#39; option ula_prefix \u0026#39;fd3f:736d:11c4::/48\u0026#39; config device option name \u0026#39;eth0\u0026#39; config interface \u0026#39;lan1\u0026#39; option proto \u0026#39;static\u0026#39; option device \u0026#39;eth0\u0026#39; option ipaddr \u0026#39;192.168.101.100\u0026#39; option netmask \u0026#39;255.255.255.0\u0026#39; option gateway \u0026#39;192.168.101.1\u0026#39; UI 设置，记得加入防火墙区域lan：\n![[Pasted image 20240206155928.png]]\n或者 vim /etc/config/firewall\n1 2 3 4 5 6 config zone option name \u0026#39;lan\u0026#39; option input \u0026#39;ACCEPT\u0026#39; option output \u0026#39;ACCEPT\u0026#39; option forward \u0026#39;ACCEPT\u0026#39; option network \u0026#39;lan1 utun\u0026#39; 然后重启，能访问UI了\nnftables 旁路由设置 大部分文档还停留在 iptables，现在OpenWRT都已经迁移到 nftables 了已经，设置应该如下\n![[Pasted image 20240206161621.png]]\n反正就是需要一个 MASQUERADE, 目标和源地址都任意。\nOpenWRT OPKG 设置 首先换成国内源：https://developer.aliyun.com/mirror/openwrt 命令：\n1 sed -i \u0026#39;s_downloads.openwrt.org_mirrors.aliyun.com/openwrt_\u0026#39; /etc/opkg/distfeeds.conf 之后安装点必要的包\n1 2 opkg update opkg install luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn luci-i18n-opkg-zh-cn OpenClash 安装 https://github.com/vernesong/OpenClash/wiki/%E5%AE%89%E8%A3%85 https://github.com/vernesong/OpenClash/releases\n按以上两个链接安装OpenClash\n由于 dnsmasq 会和 dnsmasq-full 撞车，于是先卸载dnsmasq. 之后再用下面的命令安装依赖\n1 opkg install coreutils-nohup bash dnsmasq-full curl ca-certificates ipset ip-full libcap libcap-bin ruby ruby-yaml kmod-tun kmod-inet-diag unzip kmod-nft-tproxy luci-compat luci luci-base 注意SCP现在走SFTP，需要加上 -O\n1 scp -O ~/Downloads/clash_meta root@192.168.101.100:/etc/openclash/core OpenClash Side Note 踩了个坑，因为OpenClash的DNS不work。于是额外装了SmartDNS, 设置DNS OverHTTPS, 使用 CloudFlare dns： 然后dnsmasq转发即可。\n1 1.1.1.1/dns-query Ref PVE LXC Openwrt 设置： https://dev.leiyanhui.com/openwrt/lxc-mian-op/ https://developer.aliyun.com/mirror/openwrt https://github.com/vernesong/OpenClash/wiki/%E5%AE%89%E8%A3%85 ","date":"2024-09-10T00:00:00Z","image":"https://upload.wikimedia.org/wikipedia/commons/8/84/OpenWrt_Logo.svg","permalink":"https://blog.nlfox.net/p/pve-lxc-openwrt-%E5%8D%95%E7%BD%91%E5%8F%A3%E6%97%81%E8%B7%AF%E7%94%B1%E8%AE%BE%E7%BD%AE/","title":"PVE LXC OpenWRT  单网口旁路由设置"},{"content":"适用目前最新UOS原生微信版本，不适用于其他版本。\n验证微信版本是否适用本方案 首先打开终端，输入命令，如果找不到终端在哪里，有件点击桌面空白处，应该能看到在终端中打开的选项。输入如下命令\n1 ls /opt/apps/ 如果结果里有 com.tencent.wechat，那么大概率可以适用。\n多开脚本 将以下脚本保存到任意目录\n1 2 3 4 5 6 7 8 #!/bin/bash SANDBOX_HOME=wechat_home_1 WECHAT_PATH=/opt/apps/com.tencent.wechat/files/wechat mkdir -p ~/$ISOLATED_HOME bwrap --dev-bind / / \\ --bind ~/$ISOLATED_HOME ~/ \\ $WECHAT_PATH $@ \u0026amp; 保存为wechat.sh。 在文件所在文件夹空白处点击右键，“在终端中打开”，打开终端。 输入如下命令\n1 chmod +x wechat.sh 完成之后，运行脚本\n1 ./wechat.sh 应该就可以看到第二个微信的登录画面了。\n","date":"2024-08-22T00:00:00Z","permalink":"https://blog.nlfox.net/p/uos-%E5%8E%9F%E7%94%9F%E5%BE%AE%E4%BF%A1%E5%A4%9A%E5%BC%80/","title":"UOS 原生微信多开"}]